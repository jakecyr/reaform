[{"/Users/jakecyr/code/reaform/src/index.tsx":"1","/Users/jakecyr/code/reaform/src/reportWebVitals.ts":"2","/Users/jakecyr/code/reaform/src/App.tsx":"3","/Users/jakecyr/code/reaform/src/Reaform.tsx":"4","/Users/jakecyr/code/reaform/src/useReaformRef.ts":"5","/Users/jakecyr/code/reaform/src/ReaformError.tsx":"6","/Users/jakecyr/code/reaform/src/index.ts":"7","/Users/jakecyr/code/reaform/src/ReaformProps.tsx":"8","/Users/jakecyr/code/reaform/src/Ref.tsx":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":1596,"mtime":1612205796713,"results":"13","hashOfConfig":"11"},{"size":2108,"mtime":1612206226125,"results":"14","hashOfConfig":"11"},{"size":282,"mtime":1612206001711,"results":"15","hashOfConfig":"11"},{"size":364,"mtime":1612206027914,"results":"16","hashOfConfig":"11"},{"size":147,"mtime":1612206335011,"results":"17","hashOfConfig":"11"},{"size":370,"mtime":1612206002112,"results":"18","hashOfConfig":"11"},{"size":323,"mtime":1612206011217,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u71fk8",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jakecyr/code/reaform/src/index.tsx",[],"/Users/jakecyr/code/reaform/src/reportWebVitals.ts",[],"/Users/jakecyr/code/reaform/src/App.tsx",[],"/Users/jakecyr/code/reaform/src/Reaform.tsx",["40"],"import { ChangeEvent, FormEvent, useEffect, useState } from 'react';\nimport { ReaformProps } from './ReaformProps';\n\nexport const Reaform = <I extends Record<string, any>>({\n  children,\n  onSubmit,\n  getRef,\n  validate,\n}: ReaformProps<I>) => {\n  const [values, setValues] = useState({} as Record<keyof I, any>);\n  const [validation, setValidation] = useState({} as Record<keyof I, string | undefined>);\n  const [touched, setTouched] = useState({} as Record<keyof I, boolean>);\n  const [valid, setValid] = useState<boolean>(false);\n\n  useEffect(() => {\n    updateRef();\n  }, [values, touched, valid, validation]);\n\n  const updateRef = () => {\n    if (!getRef) {\n      return;\n    }\n\n    getRef({\n      values,\n      touched,\n      validation,\n      valid,\n      onTouched: (e) => onInputTouched(e),\n      onChange: (e) => onInputChange(e),\n    });\n  };\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (valid) {\n      onSubmit(values);\n    } else {\n      console.error('Form is not valid, but was submitted', validation);\n    }\n    return false;\n  };\n\n  const onInputTouched = (e: ChangeEvent<HTMLInputElement>) => {\n    const name = e?.target?.name;\n\n    if (!name) {\n      throw new Error('All inputs must have a name attribute');\n    }\n\n    if (touched[name]) {\n      return;\n    }\n\n    setTouched({\n      ...touched,\n      [name]: true,\n    });\n  };\n\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const name = e?.target?.name;\n\n    if (!name) {\n      throw new Error('All inputs must have a name attribute');\n    }\n\n    const newValues = {\n      ...values,\n      [name]: e.target.value,\n    };\n\n    setValues(newValues);\n\n    if (validate) {\n      const validationResponse = validate(newValues) || {};\n      setValidation(validationResponse);\n\n      const isValid = Object.values(validationResponse).every(\n        (val: string | undefined) => val === null || val === undefined || val === '',\n      );\n\n      setValid(isValid);\n    }\n  };\n\n  return <form onSubmit={(e: FormEvent<HTMLFormElement>) => handleSubmit(e)}>{children}</form>;\n};\n",["41","42"],"/Users/jakecyr/code/reaform/src/useReaformRef.ts",[],"/Users/jakecyr/code/reaform/src/ReaformError.tsx",[],"/Users/jakecyr/code/reaform/src/index.ts",[],"/Users/jakecyr/code/reaform/src/ReaformProps.tsx",[],"/Users/jakecyr/code/reaform/src/Ref.tsx",[],{"ruleId":"43","severity":1,"message":"44","line":17,"column":6,"nodeType":"45","endLine":17,"endColumn":42,"suggestions":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateRef'. Either include it or remove the dependency array.","ArrayExpression",["51"],"no-native-reassign",["52"],"no-negated-in-lhs",["53"],{"desc":"54","fix":"55"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [values, touched, valid, validation, updateRef]",{"range":"56","text":"57"},[575,611],"[values, touched, valid, validation, updateRef]"]